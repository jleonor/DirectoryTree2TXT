<!-- File: Views/MainWindow.xaml -->
<Window x:Class="DirectoryTreeViewer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:DirectoryTreeViewer.ViewModels"
        xmlns:conv="clr-namespace:DirectoryTreeViewer.Converters"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:controls="clr-namespace:DirectoryTreeViewer.Controls"

        Title="Directory Tree Viewer" Height="600" Width="1000"
        Background="{StaticResource PrimaryBackgroundBrush}" 
        FontFamily="Segoe UI Light" FontSize="14"
        WindowStyle="None" ResizeMode="CanResizeWithGrip">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <conv:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <Style x:Key="InlineEditTextBoxStyle" TargetType="TextBox">
            <!-- Remove background and borders to mimic a TextBlock -->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <!-- Match the font styling -->
            <Setter Property="FontFamily" Value="Segoe UI Light"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundBrush}"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <!-- Custom Title Bar -->
            <RowDefinition Height="*" />
            <!-- Main Content -->
        </Grid.RowDefinitions>

        <!-- Custom Title Bar -->
        <Grid Grid.Row="0">
            <controls:CustomTitleBar ApplicationTitle="Directory Tree Viewer" 
                             Background="{StaticResource ControlBackgroundBrush}" />
        </Grid>


        <!-- Main Content Area -->
        <Grid x:Name="MainContentGrid" Grid.Row="1" Margin="10">
            <Grid.ColumnDefinitions>
                <!-- LEFT: Configuration Panel pinned at 300px -->
                <ColumnDefinition Width="300" />
                <!-- MIDDLE: Toggle Button (auto) -->
                <ColumnDefinition Width="Auto" />
                <!-- RIGHT: Directory Tree area (expands) -->
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Left Panel: Configuration Panel -->
            <Border x:Name="ConfigurationPanel"
              Grid.Column="0"
              Background="{StaticResource ControlBackgroundBrush}"
              Padding="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Top Section: Configurations List -->
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Configurations"
           FontFamily="Bahnschrift"
           FontSize="16"
           Margin="0,0,0,10"
           Grid.Row="0"/>
                        <!-- Move the ListBox to the star row -->
                        <ListBox x:Name="ConfigurationsListBox"
             Grid.Row="1"
             ItemsSource="{Binding Configurations}"
             SelectedItem="{Binding SelectedConfiguration}"
             VerticalAlignment="Stretch">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <!-- Display mode -->
                                        <TextBlock Text="{Binding DisplayName}"
                               Visibility="{Binding IsEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                                        <!-- Edit mode -->
                                        <TextBox Text="{Binding DisplayName, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                             Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}"
                             KeyDown="EditTextBox_KeyDown"
                             LostFocus="EditTextBox_LostFocus"
                             Style="{StaticResource InlineEditTextBoxStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="2">
                            <Button Content="Save" Command="{Binding SaveConfigCommand}" Margin="0,0,10,0"/>
                            <Button Content="Delete"
             Command="{Binding DeleteConfigCommand}"
             CommandParameter="{Binding SelectedConfiguration}"
             Margin="0,0,10,0"/>
                            <Button x:Name="RenameButton"
             Content="Rename"
             Click="RenameButton_Click"
             Margin="0,0,10,0"/>
                        </StackPanel>
                    </Grid>


                    <!-- Separator -->
                    <Separator Grid.Row="1" Margin="5,10" Height="1" Background="{StaticResource LightGreyBorderBrush}"/>

                    <!-- Bottom Section: Exclusion Entries and Options -->
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Entry Controls Row -->
                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0" Grid.Row="0">
                            <TextBox x:Name="EntryNameTextBox"
                       Width="150"
                       Text="{Binding NewEntryName, UpdateSourceTrigger=PropertyChanged}"
                       mah:TextBoxHelper.Watermark="Enter file or folder name"/>
                            <Button x:Name="AddEntryButton"
                      Content="Add"
                      Margin="5,0,0,0"
                      Command="{Binding AddEntryCommand}"
                      CommandParameter="{Binding NewEntryName}"/>
                            <Button x:Name="ClearAllEntriesButton"
                      Content="Clear"
                      Margin="5,0,0,0"
                      Command="{Binding ClearEntriesCommand}"/>
                        </StackPanel>

                        <!-- Checkbox Row -->
                        <CheckBox x:Name="ShowContentsCheckBox"
                      Content="Show File Contents"
                      IsChecked="{Binding ShowContents}"
                      Margin="0,10,0,0"
                      Grid.Row="1"/>

                        <!-- Exclusion Entries DataGrid -->
                        <Grid Grid.Row="2" Margin="0,10,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Label Content="Exclusion Entries:" Grid.Row="0"/>
                            <DataGrid x:Name="ExclusionEntriesDataGrid"
                        ItemsSource="{Binding ExclusionEntries}"
                        AutoGenerateColumns="False"
                        CanUserAddRows="False"
                        HeadersVisibility="Column"
                        Grid.Row="1">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Entry" Binding="{Binding Name}" Width="*"/>
                                    <DataGridCheckBoxColumn Header="Ignore" Binding="{Binding Ignore}" Width="Auto"/>
                                    <DataGridTemplateColumn Header="Remove" Width="Auto">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="X"
                                Command="{Binding DataContext.RemoveEntryCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>

            <!-- Middle Column: Toggle Button -->
            <Grid Grid.Column="1" Margin="0,0,10,0">
                <Button x:Name="ToggleConfigButton"
                Click="ToggleConfigButton_Click"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{StaticResource AccentBrush}"
                Foreground="White"
                Padding="2">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="0,5,5,0">
                                <ContentPresenter HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Margin="{TemplateBinding Padding}" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <TextBlock x:Name="ToggleTextBlock"
                     Text="Collapse Config Options"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Top">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Button>
            </Grid>

            <!-- Right Panel: Directory Selection and Directory Tree -->
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Folder Selection -->
                <Grid Grid.Row="0" Margin="0,0,0,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="Select a folder" />
                    <!-- Added margin here to match the spacing used in the Directory Tree section -->
                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="DirectoryPathTextBox"
                 Grid.Column="0"
                 VerticalAlignment="Center"
                 Text="{Binding DirectoryPath, UpdateSourceTrigger=PropertyChanged}"
                 Margin="0,0,10,0"/>
                        <Button x:Name="BrowseButton"
                Grid.Column="1"
                Content="Browse"
                Command="{Binding BrowseCommand}"
                Margin="0,0,10,0"/>
                        <Button x:Name="GenerateTreeButton"
                Grid.Column="2"
                Content="Generate Tree"
                Command="{Binding GenerateTreeCommand}"/>
                    </Grid>
                </Grid>

                <!-- Directory Tree Output -->
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="Directory Tree" />
                    <TextBox Grid.Row="1"
             Text="{Binding TreeOutput}" 
             IsReadOnly="True" 
             AcceptsReturn="True"
             VerticalScrollBarVisibility="Auto" 
             HorizontalScrollBarVisibility="Hidden"
             VerticalAlignment="Stretch"
             HorizontalAlignment="Stretch"
             Margin="0,5,0,0"/>
                </Grid>


            </Grid>
        </Grid>
    </Grid>
</Window>